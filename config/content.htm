<h1>Weeks</h1>
<h2>Week 2-5</h2>
<p>week2：建立個人網站</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KQGeJmjNM3g" width="560"></iframe></p>
<p>新增新的倉儲，命名為「cad2019」，並設公開<br/>下載 2019Fall可攜套件.7z (編譯 Solvespace 用)<br/>進入tmp 到 "home_mdecourse"，用Sc1開啟 .gitconfig<br/>利用submodule獲得子模組<br/>開設近端伺服器修改網頁內容<br/>將修改內容push上去</p>
<p><br/>week3：編譯solvespace</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ofn2jmadyn8" width="560"></iframe></p>
<p>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe<br/>git version 查驗 git 版本<br/>git 2.13 版本以上, 可以使用下列 git clone --recurse-submodules 取得所有子模組資料<br/>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace<br/>edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714<br/>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()<br/>需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中:<br/>cd solvespace<br/>cd extlib<br/>cd libpng<br/>mkdir build<br/>cd build<br/>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>mingw32-make<br/>rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib<br/>接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行:<br/>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>mingw32-make<br/>week5：繪製 Solvespace Tutorial 11: Cubic Bezier Spline tool (Vase)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_Ywrsypq42o" width="560"></iframe></p>
<p>開啟自己隨身的Solvespace程式。<br/>使用三點曲線繪製外型<br/>使用直線繪製底座即使圖形成為封閉面<br/>選擇一條線作為旋轉軸，使圖形繞著軸旋轉</p>
<h2>Week 6-9</h2>
<p>Week6</p>
<p>任務1：利用 Solvespace 繪製雙輪車所需的零組件, 將操作過程拍成帶有說明字幕的影片後上傳至 Youtube 後, 嵌入個人網頁 W6 頁面中. (影片標題為: 機械設計工程系-電腦輔助設計實習 W6 任務一參數化零組件繪製).</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fZ22cCab28Q" width="560"></iframe></p>
<p>任務2：利用 V-rep 3.6.1 rev4 與隨身程式執行系統, 完成網際 V-rep 模型控制任務後, 將操作過程拍成帶有說明字幕的影片後上傳至 Youtube 後, 嵌入個人網頁 W6 頁面中. (影片標題為: 機械設計工程系-電腦輔助設計實習 W6 任務一網際 V-rep 模型控制).</p>
<p><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/mXlK-yHbxUc" width="560"></iframe><br/><br/></p>
<p><span>任務3：從 </span><a aria-label="#14, V-rep Simulation" class="issue-link js-issue-link" data-error-text="Failed to load issue title" data-hovercard-type="issue" data-hovercard-url="/mdecourse/cad2019/issues/14/hovercard" data-id="508788931" data-permission-text="Issue title is private" href="https://github.com/mdecourse/cad2019/issues/14">#14</a><span><span> </span>已知可透過 Python 程式啟動或停止 V-rep 模擬, 請在事項 2 的架構下, 新增兩個按鈕, 可以啟動或停止所連線的 V-rep 模擬. 完成後將操作流程拍成帶字幕的影片後上傳至 Youtube 後, 嵌入個人網頁 W6 頁面中. (影片標題為: 機械設計工程系-電腦輔助設計實習 W6 任務一新增啟動與停止按鈕)</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/qmcW4QfVddE" width="560"></iframe></span></p>
<p>Week7</p>
<p><span class="js-issue-title">任務1：Solvespace 編譯加入學號</span></p>
<ul>
<li><span> </span>到tmp &gt; solvespace &gt; build &gt;src &gt;CMakeFiles &gt; solvespace.dir刪掉           slovespace.cpp.obj檔</li>
<li>到<span> solvespace &gt;src找到  slovespace.cpp 拉進編輯器</span></li>
<li>利用ctrl + f 進行搜尋 ，找GPL</li>
<li>找到  this  is  <span>solvespace 在後面加上 is compiled by 自己學號</span></li>
<li>利用小黑框，路徑移置 tmp &gt; solvespace &gt; build 打上 mingw32-makemingw32-make 指令</li>
<li>完成後到 solvespace &gt; build &gt;bin 開啟 slovespace.exe ，進help 點 about 確認驗證完成</li>
</ul>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/btlRJgwwhuk" width="560"></iframe></p>
<p>任務2：<span>Solvespace 參數繪圖驗證</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xG0-_1gMaZI" width="560"></iframe></p>
<p>Week8</p>
<p><strong>啟用 CMSiMDE中的網誌系統</strong></p>
<ul>
<li>開啟Leo，並用Leo開啟config 內的 pelican.Leo</li>
<li>複製個人Blog網址到@path../ ➜ Pelican設定 ➜遠端 sitevrl</li>
<li>將DISQUS_SITENAME改為 學號 CAD2019</li>
<li>右鍵 local_blog 點選 goto  script ，將指令複製到 cmd </li>
<li>去靜端檢查</li>
</ul>
<p></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/tMdIU8Y2vJg" width="560"></iframe></p>
<p><strong>導入 Webots</strong></p>
<ul>
<li>下載<a href="https://drive.google.com/file/d/1o8cAv-pSUyp69TUGhC7NvEznGrdNP5AC/view?usp=sharing">Webot 2019a.7z</a></li>
<li>複製start_mdecourse.bat並更名start_mdecourse -webot.bat</li>
<li>將指令貼上</li>
<li>按stop,開啟<span>start_mdecourse -webot.bat</span></li>
</ul>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Uv9PDqvoSS4" width="560"></iframe></span></p>
<p><span><strong>以ssh對Github 連線</strong></span></p><h2>Week 10-14</h2>
<p></p>
<h2>Week 15-18</h2>
<h1>Note</h1>
<p><span>git submodule add</span><span> </span>https://github.com/mdecourse/cmsimde.git cmsimde 第一次把cmsimde載入倉儲使用<br/><span>python -m pip install flask_cors</span><span> </span>要更新下載flask_cors<br/><span>git clone --recurse-submodules</span><span> </span><span>https://github.com/solvespace/solvespace.git solvespace</span><br/>從遠端copy cmsimde必須，綠字部分改cmsimde的網址</p>
<p>使用學校網路需用proxy</p>
<p><span>[http]</span><br/><span>proxy = [2001:288:6004:17::7]:3128</span></p>
<h2>video production</h2>
<p><span>我們使用"Sharex" (圖一)進行網頁拍攝,並使用"aegisub"(圖二)或arctime</span><span>(圖二-1)</span><span>做字幕編輯,最後再由"</span><span>avidemux"(圖三)進行影片檔跟字幕檔的合併.</span></p>
<p></p>
<p><a href="https://getsharex.com/" target="_blank">Sharex</a><span>(圖一)</span><img alt="" height="215" src="https://s40723210.github.io/cad2019/images/header.jpg" width="460"/></p>
<p><a href="http://www.aegisub.org/" target="_blank">aegisub</a><span>(圖二)</span></p>
<p><img alt="" height="225" src="https://s40723210.github.io/cad2019/images/images.jpg" width="225"/></p>
<p><a href="https://arctime.org/" target="_blank">arctime</a><span>(圖二-1)</span></p>
<p><img alt="" height="225" src="https://s40723210.github.io/cad2019/images/images.png" width="225"/></p>
<p><a href="http://www.avidemux.org/nightly/win64_support/" target="_blank">avidemux</a><span>(圖三)</span></p>
<p><img alt="" height="239" src="https://s40723242.github.io/cad2019/images/avidemux_story.jpg" width="449"/></p><h2>solvespace - 快捷鍵</h2>
<p><br/>Sketch:</p>
<p><img alt="" height="753" src="https://s40723242.github.io/cad2019/images/s1.png" width="423"/></p>
<p>Constrain:</p>
<p><img alt="" height="820" src="https://s40723242.github.io/cad2019/images/s2.png" width="459"/></p>
<p>New group:</p>
<p><img alt="" height="455" src="https://s40723242.github.io/cad2019/images/x3.png" width="370"/></p>
<p>Perspective:</p>
<p><img alt="" height="145" src="https://s40723242.github.io/cad2019/images/s4.png" width="378"/></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>