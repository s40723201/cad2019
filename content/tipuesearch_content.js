var tipuesearch = {"pages": [{'title': 'Weeks', 'text': 'Week 2-5 \n Week 6-9 \n Week 10-14 \n Week 15-19 \n \n \n', 'tags': '', 'url': 'Weeks.html'}, {'title': 'Week 2-5', 'text': 'week2：建立個人網站 \n \n 新增新的倉儲，命名為「cad2019」，並設公開 \n 下載 2019Fall可攜套件.7z (編譯 Solvespace 用) \n 進入tmp 到 "home_mdecourse"，用Sc1開啟 .gitconfig \n 利用submodule獲得子模組 \n 開設近端伺服器修改網頁內容 \n 將修改內容push上去 \n \n week3：編譯solvespace \n \n 先將 Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe \n git version 查驗 git 版本 \n git 2.13 版本以上, 可以使用下列 git clone --recurse-submodules 取得所有子模組資料 \n git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace \n edit Y:\\tmp\\solvespace\\extlib\\angle\\CMakeLists.txt comment out line 713 and 714 #list(APPEND ANGLE_DEFINITIONS #"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \\"d3dcompiler_47.dll\\", \\"d3dcompiler_46.dll\\", \\"d3dcompiler_43.dll\\" }") endif() \n 需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中: cd solvespace cd extlib cd libpng mkdir build cd build cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n rename libpng.dll.a to libpng_static.a and copy to Y:\\msys64\\mingw64\\lib \n 接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行: cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n \n week5：繪製 Solvespace Tutorial 11: Cubic Bezier Spline tool (Vase) \n \n 開啟自己隨身的Solvespace程式。 \n 使用三點曲線繪製外型 \n 使用直線繪製底座即使圖形成為封閉面 \n 選擇一條線作為旋轉軸，使圖形繞著軸旋轉 \n \n \n', 'tags': '', 'url': 'Week 2-5.html'}, {'title': 'Week 6-9', 'text': 'Week6 \n 任務1： \n \u3000\u3000利用 Solvespace 繪製雙輪車所需的零組件, 將操作過程拍成帶有說明字幕的影片後上傳至 Youtube 後, 嵌入個人網頁 W6 頁面中 \n \n 任務2： \n \u3000\u3000利用 V-rep 3.6.1 rev4 與隨身程式執行系統, 完成網際 V-rep 模型控制任務後, 將操作過程拍成帶有說明字幕的影片後上傳至 Youtube 後, 嵌入個人網頁 W6 頁面中 \n \n 任務3： \n \u3000\u3000從\xa0 #14 \xa0 已知可透過 Python 程式啟動或停止 V-rep 模擬, 請在事項 2 的架構下, 新增兩個按鈕, 可以啟動或停止所連線的 V-rep 模擬. 完成後將操作流程拍成帶字幕的影片後上傳至 Youtube 後, 嵌入個人網頁 W6 頁面中 \n \n Week7 \n 任務1：Solvespace 編譯加入學號 \n \n \xa0 到tmp > solvespace > build >src >CMakeFiles > solvespace.dir刪掉\xa0 \xa0 \xa0 \xa0 \xa0 \xa0slovespace.cpp.obj檔 \n 到 \xa0solvespace\xa0>src找到\xa0\xa0slovespace.cpp 拉進編輯器 \n 利用ctrl + f 進行搜尋 ，找GPL \n 找到\xa0\xa0this\xa0 is\xa0\xa0 solvespace 在後面加上 is compiled by 自己學號 \n 利用小黑框，路徑移置\xa0tmp > solvespace > build 打上\xa0mingw32-makemingw32-make 指令 \n 完成後到\xa0solvespace > build >bin 開啟\xa0slovespace.exe ，進help 點 about 確認驗證完成 \n \n \n 任務2：Solvespace\xa0參數繪圖驗證 \n \n Week8 \n 啟用 CMSiMDE中的網誌系統 \n \n 開啟Leo，並用Leo開啟config 內的 pelican.Leo \n 複製個人Blog網址到@path../\xa0➜ Pelican設定\xa0➜遠端 sitevrl \n 將DISQUS_SITENAME改為 學號 CAD2019 \n 右鍵 local_blog 點選 goto\xa0 script ，將指令複製到 cmd\xa0 \n 去靜端檢查 \n \n \n 導入 Webots \n \n 下載 Webot 2019a.7z \n 複製start_mdecourse.bat並更名start_mdecourse -webot.bat \n 將指令貼上 \n 按stop,開啟 start_mdecourse -webot.bat \n \n \n 以ssh對Github 連線 \n \n 將portablegit\\bin中的sh_for_solvespace_compile複製並更名為sh.exe \n 進入cmd輸入 ssh-keygen -t rsa -b 4096 -C "使用者學號" \n 下載putty並透過putty.chm新增兩枚鑰使 \n 修改 start.bat: \n \n \u3000\u3000\u3000\u3000set GIT_HOME=%Disk%:\\portablegit\\bin\\ \n \u3000\u3000\u3000\u3000set GIT_SSH=%Disk%:\\putty\\plink.exe \n \n 修改自身 倉儲 .git 中的 config 檔案中的 url 設定 \n \n \u3000\u3000\u3000\u3000url =  git@github.com:mdecourse/cad2019.git \n \n 設定putty \n 在Y:\\home_mdecourse\\.ssh中新增config並加入指令 \n \n \u3000\u3000\u3000\u3000ProxyCommand y:/putty/plink.exe github.com %h %p\n \n\u3000\u3000\u3000\u3000Host github.com\n    \u3000\u3000\u3000\u3000User git\n   \u3000\u3000\u3000\u3000 Port 22\n   \u3000\u3000\u3000\u3000 Hostname github.com\n \n   \u3000\u3000\u3000\u3000 TCPKeepAlive yes\n   \u3000\u3000\u3000\u3000 IdentitiesOnly yes \n \n 在githun ssh設定中新增鑰使 \n \n \n Week9：期中影片 \n \n', 'tags': '', 'url': 'Week 6-9.html'}, {'title': 'Week 10-14', 'text': '\n', 'tags': '', 'url': 'Week 10-14.html'}, {'title': 'Week 15-18', 'text': '', 'tags': '', 'url': 'Week 15-18.html'}, {'title': 'Note', 'text': 'git submodule add \xa0 https://github.com/mdecourse/cmsimde.git cmsimde 第一次把cmsimde載入倉儲使用 python -m pip install flask_cors \xa0 要更新下載flask_cors git clone --recurse-submodules \xa0 https://github.com/solvespace/solvespace.git solvespace 從遠端copy cmsimde必須，綠字部分改cmsimde的網址 \n 使用學校網路需用proxy \n [http] proxy = [2001:288:6004:17::7]:3128 \n', 'tags': '', 'url': 'Note.html'}, {'title': 'video production', 'text': '我們使用"Sharex" (圖一)進行網頁拍攝,並使用"aegisub"(圖二)或arctime (圖二-1) 做字幕編輯,最後再由" avidemux"(圖三)進行影片檔跟字幕檔的合併. \n \n Sharex (圖一) \n aegisub (圖二) \n \n arctime (圖二-1) \n \n avidemux (圖三) \n \n', 'tags': '', 'url': 'video production.html'}, {'title': 'solvespace - 快捷鍵', 'text': 'Sketch: \n \n Constrain: \n \n New group: \n \n Perspective: \n \n', 'tags': '', 'url': 'solvespace - 快捷鍵.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'cadhistory', 'text': '', 'tags': '', 'url': 'cadhistory.html'}, {'title': 'Chapter 1', 'text': 'Chapter 1 Introduction \n \u3000\u3000工程設計可能開始於一個不知名的野蠻人有個富於想像力的想法，那就是打造一個更好的武器來抵禦一個野蠻人或帶回家更多的食物作為晚餐。從那時起，人們一直試圖創造更大更好的結構和產品來改善生活。我一直對埃及人如何使用他們擁有的工具建造金字塔，羅馬人建造競技場和公共集會廣場感到驚訝。即使在過去的一個世紀中，對於我們這些生活以電腦為中心的人來說，也令人驚奇的是，他們設想了諸如金門大橋和帝國大廈之類的建築結構，或者設計了我們不習慣使用的工具的混合動力汽車和超音速飛機。電腦永遠改變了工程實踐。用最簡單的術語來說，它消除了設計過程中的繁瑣工作。用詹姆士·克萊克·麥克斯韋（James Clerk Maxwell）的話說，“當人們在做電腦的工作時，人們的思想很少滿足，並且絕對不會行使其最高功能。 \n \u3000\u3000今天，電腦輔助設計（CAD）行業是一個數十億美元的業務，每天有數以百萬計的工程師，建築師和製圖員使用這些電腦系統。這項技術顯然已經改變了主要從事但沒有在所有情況下使更好的職業的人數。我們並非總是可以成功地做到這一點。電腦太慢，軟件因錯誤和功能缺陷而困擾，管理人員也不想惹麻煩。最終，該行業解決了技術和管理問題，如今很少有人願意在沒有最新可用技術的情況下解決任何復雜的設計項目。 \n \u3000\u3000本書主旨在講述一個故事，它講述了我們如何從幾位具有遠見卓識的學者發展成為一個行業，該行業提供了用於設計一切工具的工具，從新型刮鬍刀到直飛世界各地的飛機。像其他學科一樣，開發該技術的工作是建立在以前的經驗基礎上的。這產生了一個有趣的故事。 \n 我最終是怎麼寫這本書的？ \n \u3000\u3000首先決定，我想在12歲那年成為一名工程師，當時正看著距我家幾街區的一棟學校的建設。與我的許多朋友不同，在初中和高中時，我從未動搖過這個目標，在18歲那年，我發現自己是麻省理工學院的一名新生，堅決地打算成為一名土木工程師，建造更大更好的水壩、橋樑。 \n \u3000\u30001957年春季，在大二調查期末考試的末尾，這種情況開始改變。查爾斯·米勒教授問我是否想為他工作，而這個項目屬於他所指導的涉及應用電腦技術的項目工程設計。在接下來的半個世紀中，我參與了有關電腦技術的開發，營銷和寫作，並將其應用於工程設計和製造。 \n \u3000\u3000米勒經常與我們談論機器如何改變勞動和電腦如何改變人們解決智力問題的方式之間。這本書是我嘗試記錄電腦如何改變工程實踐的嘗試。我選擇通過主要是通過在場人員的眼光來研究創造這項新技術的公司和個人來做到這一點。與編寫此類書籍的任何人一樣，最好事先準備我的證書。在學術上，我擁有麻省理工學院的土木工程學士學位和碩士學位。MS可能會引起誤解，因為Miller教授試圖改變MIT土木工程的教學方式，並嘗試接觸其他學科。我最終從事的業務管理和運籌學研究工作與土木工程一樣多。當時很少有電腦科學課程-實際上，我們甚至沒有稱其為電腦科學。當我獲得碩士學位時，我的心中幾乎沒有疑問，我想在新興的電腦行業工作，而不是從事土木工程。這是我遇到第二個對我的職業生涯產生重大影響的人傑克·吉爾摩（Jack Gilmore）。 Jack是一家小型軟件諮詢公司的副總裁，該公司從事開發圖形系統以進行電腦輔助製圖。除了在軍隊工作了幾年外，我一直在亞當斯協會（後來名為Keydata）的傑克工作，直到1969年末。我幾乎所有的工作都涉及電腦圖形學，包括第一個面向圖形的煉油廠控制系統的設計和實現。隨後，他在一家大型建築和工程公司URS從事公司規劃工作，然後擔任Calma的推銷員，Calma是最早的商業CAD2供應商之一。加入Calma之後，我在Tektronix的多個市場營銷和銷售管理職位工作。泰克是1970年代和1980年代初期的主要圖形終端供應商。幾年來，它一直在嘗試開發最終用戶CAD系統業務，而我負責現場操作。 1980年，我加入了Auto-trol Technology，在接下來的12年中，我擔任過各種營銷，銷售和軟件開發管理職位。在1980年代初期的幾年中，我一直負責公司的競爭分析活動。作為一個天生的傻瓜，我從那本書的編寫工作中節省了大量材料。 1991年末，我成立了Technology Automation Services，並開始發布《工程自動化報告》，從而改變了我的職業方向。在接下來的八年中，我涵蓋了CAD行業，並採訪了後續章節中提到的許多人。 1994年，我獲得了由肯·安德森（Ken Anderson）於1978年發起的《計算機圖形學安德森報告》，然後在1997年，我獲得了由埃德·佛雷斯特（Ed Forrest）於1977年發起的AEC自動化通訊。為簡單起見，我決定將這一行業稱為電腦輔助設計或CAD而不是使用適用於該技術特定方面的所有其他首字母縮略詞，例如CAE（電腦輔助工程），EDA（電子設計自動化），CAM（電腦輔助製造）或PLM（產品生命週期管理）。我提供了一個附錄，解釋了本書中適用於該材料的許多術語。十年前，沃爾夫收購了CAD / CIM Alert，這是其他早期行業通訊之一。結果是，我最終完成了涵蓋CAD行業的五個最重要的新聞通訊的近乎完整的運行。這些為本書提供了很大一部分背景材料。 \n 記錄不斷發展的行業 \n \u3000\u3000 為什麼要寫一本有關CAD行業的書？這是一個合理的問題，我在編寫本書時曾嘗試多次回答。第二次世界大戰後不久，這個行業才在60年前成立。儘管我們開始失去一些早期的創始者，但許多在許多早期研究中發揮了作用並參與組建我所寫的公司的人仍然活著並處於活躍狀態。從現在起20年後可能不是這種情況。因此，我認為在這個重要的行業仍然可以做出貢獻的同時，記錄下這一重要行業非常重要。在這個行業的職業生涯中，我很幸運認識並認識了我所寫的許多個人。除少數例外，他們在回答我的許多問題以及提供我可能無法獲得的志願材料方面都非常有幫助。這樣做的另一個原因是，沒有人寫過關於整個行業的書，只有很少的書寫過關於CAD行業中各個公司的書。實際上，我只能想到兩個-約翰·沃克（John Walker）的《 Autodesk File》和理查德·麥克尼爾（Richard MacNeal）的《麥克尼爾·史威德勒公司（MacNeal Schwendler Company）–最初的20年》。有很多書籍涵蓋了設計技術的特定方面，例如Donald LaCourse的實體建模手冊，David Rogers的NURBS簡介和Jami Shah和MarttiMäntylä的參數化和基於特徵的CAD / CAM。另一方面，已經有無數關於使用所出售的各種CAD軟件包中的一個或另一個的書籍。例如，僅大衛·科恩（David Cohn）就已經在AutoCAD上撰寫或合著了15本書。這是一個相當緊密的編織社區。使之成為一個有趣故事的方面之一是，過去40年來，關鍵人物從一家公司轉移到另一家公司的方式。許多人參與了兩個，三個甚至更多的初創公司，每次都試圖創造下一個偉大的技術。我想寫這本書的另一個原因之一是周圍有很多不正確的信息。一位受人尊敬的顧問在他的網站上說，Computervision和Applicon成立於1972年，當時它們實際上是在1969年成立的。另一家市場研究公司在1980年將Auto-trol Technology的收入佔機械的87％，而實際上，機械公司業務的一小部分。為了確保本書中的事實盡可能準確，我付出了極大的努力。我的觀點是，我試圖闡明這種情況。本書的內容和不是正如任何讀者所看到的，這是一本相當冗長的書。它可能很容易是原來的幾倍，可能是兩三卷。我的意圖不是超越意志。艱難的決定是劃清界限。決定的一部分是從研究角度和詳細描述的公司寫我最熟悉的東西。一個重要的結果是，該書涵蓋了麻省理工學院的早期研究，但沒有涉及其他大學的很多情況。不幸的是，這意味著對康奈爾大學，錫拉丘茲大學，猶他大學，羅切斯特大學和倫斯勒理工學院所做的工作的關注剛剛過去。同樣，僅覆蓋英國劍橋大學所做的重大工作，因為它影響了該故事的其他要素。第二個決定是集中於適用於機械設計和製造的公司和技術，其中涉及一些AEC（建築，工程和建築）。即使在後一種情況下，我本身也不會花太多時間在體系結構上。就像電子設計自動化（EDA）一樣，它很容易就擁有一本獨立的書，而且僅在我撰寫的公司參與該技術的範圍內才涉及。本書大部分涵蓋了總部位於美國的軟件和系統公司。事實仍然是，除了幾個重要的例外，全世界絕大多數CAD行業都集中在這個國家。主要的例外是法國的DassaultSystèmes，該公司在第13章中進行了深入介紹。另一個例外是建築建模領域，該領域部分地由數家歐洲公司推動，但這又是一個主題。多年來，已經有成百上千的公司（甚至數千家公司）開發了用於自動化工程設計過程的硬件和軟件產品。覆蓋範圍的決定嚴格是我的，我向那些（包括一些中等成功的公司）致歉，因為這個空間根本不允許我覆蓋。正如讀者所看到的，我並沒有深入研究用於支持CAD的技術。沒有公式描述如何解決曲面的交點或討論面向對象軟件的複雜性。我確實假設讀者通常對計算機的硬件和軟件有所了解，儘管可能不了解它如何應用於CAD行業。有一個附錄可以幫助解釋所使用的一些術語和首字母縮寫詞。儘管我已嘗試將各章之間的冗餘降至最低，但特定公司的每章都獨立存在。   \xa0 來自許多方面的幫助 \n \u3000\u3000 非常感謝所有為“工程設計革命”提供信息的人。近年來，我的標準聲明是“不要扔掉，只把它寄給我。”我不特別要感謝史蒂夫·沃爾夫，布拉德·霍爾茨，戴維·科恩，喬爾·奧爾，迪克·索瓦爾，帕特·漢拉蒂（Pat Hanratty），迪克·哈里森（Dick Harrison），方丹·理查森（Fontaine Richardson），卡爾·霍克（Carl Howk），菲爾·維勒斯（Phil Villers），湯姆·拉澤爾（Tom Lazear），瑞秋·塔格（Rachael Taggart），李·惠特尼（Lee Whitney），里克·卡雷利（Rick Carrelli），史蒂芬·韋斯伯格（Steven Weisberg），格雷格·史密斯（Greg Smith），約翰·貝克（John Baker），彼得·馬克（Peter Marks），戴夫·艾伯特（Dave Albert），迪克·米勒（Dick Miller），拉斯·亨克（Russ Henke），查爾斯·朗（Charles Lang）其他提供信息並花時間討論其經歷的人。\xa0', 'tags': '', 'url': 'Chapter 1.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};